import { GoogleGenAI, Modality } from "@google/genai";
import { UploadedImage } from '../types';

if (!process.env.API_KEY) {
  throw new Error("API_KEY environment variable not set");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

export async function generateTryOnImage(personImage: UploadedImage, clothingImage: UploadedImage, garmentDescription: string): Promise<string[]> {
  const model = 'gemini-2.5-flash-image-preview';

  const itemDescriptor = garmentDescription.trim()
    ? `the ${garmentDescription.trim()}`
    : `the clothing item`;

  const prompt = `Analyze the person in the first image and the clothing item in the second image. generate realistic photo where the person from the first image is wearing ${itemDescriptor} from the second image. The background, person's pose, and face should remain identical to the first image. The final output images must have. make sure the the human is anatomically correct - proportions-`;


  const personImagePart = {
    inlineData: {
      data: personImage.base64,
      mimeType: personImage.mimeType,
    },
  };

  const clothingImagePart = {
    inlineData: {
      data: clothingImage.base64,
      mimeType: clothingImage.mimeType,
    },
  };

  try {
    const response = await ai.models.generateContent({
      model: model,
      contents: {
        parts: [
          personImagePart,
          clothingImagePart,
          { text: prompt },
        ],
      },
      config: {
        responseModalities: [Modality.IMAGE, Modality.TEXT],
      },
    });
    
    const generatedImages: string[] = [];
    for (const part of response.candidates[0].content.parts) {
      if (part.inlineData && part.inlineData.mimeType.startsWith('image/')) {
        generatedImages.push(part.inlineData.data);
      }
    }

    if (generatedImages.length === 0) {
      throw new Error('No image was generated by the model. The model may have refused the request.');
    }
    
    return generatedImages;
  } catch (error) {
    console.error("Error calling Gemini API:", error);
    throw new Error('Failed to generate image. Please check your inputs or try again later.');
  }
}
